services:
  backend:
    build:
      context: .
    container_name: fastapi_backend
    restart: on-failure
    command: ["gunicorn", "-c", "gunicorn.conf.py", "main:app_socket"]
    # command: [
    #   "uvicorn",
    #   "main:app_socket",
    #   "--host",
    #   "0.0.0.0",
    #   "--port",
    #   "8000",
    #   "--log-level",
    #   "debug",
    # "--workers",
    # "3",
    # "--ssl-keyfile",
    # "/app/cert/client.key",
    # "--ssl-certfile",
    # "/app/cert/client.crt",
    # "--ssl-ca-certs",
    # "/app/cert/ca.crt",
    # ]
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    # environment:
    # CLIENT_KEY_PATH: ${CLIENT_KEY_PATH}
    # CLIENT_CERT_PATH: ${CLIENT_CERT_PATH}
    # CA_CERT_PATH: ${CA_CERT_PATH}
    environment:
      PYTHONUNBUFFERED: 1 # Ensure logs are flushed immediately

  db:
    image: postgres:latest
    container_name: sazman
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "127.0.0.1:5050:80"
    depends_on:
      - db
    # networks:
    #   - backend_network

volumes:
  postgres_data:
  # cert_data:
