services:
  backend:
    build:
      context: .
    container_name: sazman_backend
    restart: on-failure
    # command:
    #   [
    #     "./wait-for-db.sh",
    #     "db",
    #     "uvicorn",
    #     "main:app_socket",
    #     "--host",
    #     "0.0.0.0",
    #     "--port",
    #     "8000",
    #     "--workers",
    #     "2",
    #     "--log-level",
    #     "debug",
    #   ]
    command:
      [
        "uvicorn",
        "main:app_socket",
        "--host",
        "0.0.0.0",
        "--workers",
        "1",
        "--log-level",
        "debug",
      ]
    # command: ["gunicorn", "-c", "gunicorn.conf.py", "main:app_socket"]
    # command: [
    #   "uvicorn",
    #   "main:app_socket",
    #   "--host",
    #   "0.0.0.0",
    #   "--port",
    #   "8000",
    #   "--log-level",
    #   "debug",
    # "--workers",
    # "3",
    # "--ssl-keyfile",
    # "/app/cert/client.key",
    # "--ssl-certfile",
    # "/app/cert/client.crt",
    # "--ssl-ca-certs",
    # "/app/cert/ca.crt",
    # ]
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./wait-for-db.sh:/app/wait-for-db.sh
    environment:
      PYTHONUNBUFFERED: 1 # Ensure logs are flushed immediately
      # MINIO_URL: ${MINIO_ENDPOINT}
      # MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      # MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      # MINIO_BUCKET_NAME: ${MINIO_PROFILE_IMAGE_BUCKET}
    # CLIENT_KEY_PATH: ${CLIENT_KEY_PATH}
    # CLIENT_CERT_PATH: ${CLIENT_CERT_PATH}
    # CA_CERT_PATH: ${CA_CERT_PATH}
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: sazman_db
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    # command: >
    #   sh -c "psql -U ${POSTGRES_USER} -tc 'SELECT 1 FROM pg_database WHERE datname = \"${POSTGRES_DB}\"' |
    #   grep -q 1 || psql -U ${POSTGRES_USER} -c 'CREATE DATABASE ${POSTGRES_DB}'"

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   restart: on-failure
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
  #     PGADMIN_DEFAULT_PASSWORD: "admin"
  #   ports:
  #     - "127.0.0.1:5050:80"
  #   depends_on:
  #     - db
  # networks:
  #   - backend_network

volumes:
  postgres_data:
  # cert_data:
